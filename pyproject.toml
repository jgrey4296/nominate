[project]
name            = "nominate"
version         = "0.0.1"
description     = ""
readme          = "README.md"
requires-python = ">=3.10"
license         = {file = "LICENSE"}
keywords        = []
authors         = [
  {name  = "John Grey", email = "jgrey.n.plus.one at gmail.com"},
]
classifiers     = [
  "Programming Language :: Python"
]

dependencies   = [
               "tomlguard",
]

[project.optional-dependencies]
docs = [ "sphinx" ]
dev  = [ "https://github.com/jgrey4296/doot", "pipreqs"]
test = [ "pytest > 7.0.0" ]

##-- urls
[project.urls]
homepage      = "https://github.com/jgrey4296/nominate"
documentation = "https://readthedocs.org/nominate"
repository    = "https://github.com/jgrey4296/nominate"
changelog     = "https://github.com//nominate/blob/master/CHANGELOG.md"

##-- end urls

##-- scripts
[project.scripts]
nominate = "nominate.__main__:main"

[project.gui-scripts]
# spam-gui      = "spam:main_gui"

[project.entry-points."nothing"]
# tomatoes      = "spam:main_tomatoes"

##-- end scripts

##-- build-system
[build-system]
requires = [
         "setuptools >= 63.1.0",
         "wheel >= 0.37.1"
]

build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
namespaces = true
where      = ["."]
include    = ["nominate*"]

[tool.setuptools.package-data]
"*" = ["*"]
"nominate.__data"    = ["*.so"]

[tool.setuptools.exclude-package-data]

##-- end build-system

# Tools #######################################################################

##-- pyright
[tool.pyright]
# strict = nominate.*
verboseOutput               = true
typeCheckingMode            = "strict"
pythonVersion               = "3.10"

reportUnusedImport          = false
reportAssertAlwaysTrue      = "information"
reportMissingParameterType  = "warning"
reportMissingTypeArgument   = "warning"
reportMissingTypeStubs      = "warning"
reportUnknownMemberType     = "warning"
reportUnknownParameterType  = "information"
reportUnknownVariableType   = "warning"
reportUnnecessaryCast       = "information"
reportUnnecessaryIsInstance = "warning"

##-- end pyright

##-- mypy
# https://mypy.readthedocs.io/en/stable/config_file.html#config-file
[mypy]
python_version      = 3.10
warn_return_any     = true
warn_unused_configs = true

# Per-module options:
[mypy-pyparsing]
ignore_missing_imports = true

##-- end mypy

##-- pytest
[tool.pytest.ini_options]
log_cli       = false
log_level     = "DEBUG"
log_cli_level = "DEBUG"

##-- end pytest

##-- sphinx
[tool.sphinx]
author     = "John Grey"
copyright  = "2024-03-10"
extensions = ['sphinx.ext.doctest', 'sphinx.ext.autodoc', 'sphinx.ext.autosummary', 'sphinx.ext.napoleon']
templates  = ['_templates']
exclude    = ['**/flycheck_*.py']

[tool.sphinx.autosummary]
generate = true

[tool.sphinx.autodoc]
add_module_names   = false
inherit_docstrings = true

[tool.sphinx.autodoc.defaults]
members           = true
undoc-members     = true
private-members   = false
special-members   = false
inherited-members = true
show-inheritance  = true

[tool.sphinx.html]
theme       = 'alabaster'
static      = ['_static']

[tool.sphinx.html.options]

##-- end sphinx

##-- bumpver
[tool.bumpver]
current_version    = "0.0.1"
version_pattern    = "MAJOR.MINOR.PATCH"
commit_message     = "[bump]: version {old_version} -> {new_version}"
tag_message        = "{new_version}"
tag_scope          = "default"
# commit             = true
# tag                = true
# pre_commit_hook  = ""
# post_commit_hook = ""
# push             = true

[tool.bumpver.file_patterns]
"pyproject.toml"   = [
                   '^version\s+=\s+"{version}"',
                   '^current_version\s+=\s+"{version}"'
]
"nominate/__init__.py" = ['^__version__\s+=\s+"{version}"']

##-- end bumpver
